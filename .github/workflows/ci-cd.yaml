name: CI Pipeline

on:
  push:
    branches: [main, docker]

env:
  FRONTEND_IMAGE: routparesh/chattingo-frontend
  BACKEND_IMAGE: routparesh/chattingo-backend

jobs:
  build-test-scan-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------------- FRONTEND (Node.js) ----------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: |
          if [ -f package.json ] && grep -q "\"test\":" package.json; then
            npm test -- --watchAll=false
          else
            echo "⚠️ No test script found in frontend/package.json"
          fi

      # ---------------- BACKEND (Java) ----------------
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build backend
        working-directory: ./backend
        run: mvn clean package -DskipTests=false

      - name: Run backend tests
        working-directory: ./backend
        run: mvn test

      # ---------------- SECURITY: GitLeaks ----------------
      - name: Run GitLeaks scan
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          args: detect --source . --no-banner --verbose

      # ---------------- QUALITY: SonarQube ----------------
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # ---------------- SECURITY: Trivy Scan ----------------
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: .
          format: 'table'
          exit-code: '0'

      # ---------------- DOCKER BUILD & PUSH ----------------
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Frontend image
        working-directory: ./frontend
        run: |
          docker build -t ${{ env.FRONTEND_IMAGE }}:${{ github.sha }} .
          docker push ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

      - name: Build and Push Backend image
        working-directory: ./backend
        run: |
          docker build -t ${{ env.BACKEND_IMAGE }}:${{ github.sha }} .
          docker push ${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      # ---------------- UPDATE K8S DEPLOYMENT ----------------
      - name: Update image tags in Kubernetes manifests
        run: |
          sed -i "s|routparesh/chattingo-frontend:.*|routparesh/chattingo-frontend:${{ github.sha }}|g" k8s/deployment.yaml

      - name: Commit updated image tags
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s/deployment.yaml
          git commit -m "update images to ${{ github.sha }}"
          git push
